/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portlet.vlinksman.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Links service. Represents a row in the &quot;Links&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.vportal.portlet.vlinksman.model.impl.LinksModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.vportal.portlet.vlinksman.model.impl.LinksImpl}.
 * </p>
 *
 * @author LongLH
 * @see Links
 * @see com.vportal.portlet.vlinksman.model.impl.LinksImpl
 * @see com.vportal.portlet.vlinksman.model.impl.LinksModelImpl
 * @generated
 */
public interface LinksModel extends BaseModel<Links> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a links model instance should use the {@link Links} interface instead.
	 */

	/**
	 * Returns the primary key of this links.
	 *
	 * @return the primary key of this links
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this links.
	 *
	 * @param primaryKey the primary key of this links
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the link ID of this links.
	 *
	 * @return the link ID of this links
	 */
	public long getLinkId();

	/**
	 * Sets the link ID of this links.
	 *
	 * @param linkId the link ID of this links
	 */
	public void setLinkId(long linkId);

	/**
	 * Returns the group ID of this links.
	 *
	 * @return the group ID of this links
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this links.
	 *
	 * @param groupId the group ID of this links
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this links.
	 *
	 * @return the company ID of this links
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this links.
	 *
	 * @param companyId the company ID of this links
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the created date of this links.
	 *
	 * @return the created date of this links
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this links.
	 *
	 * @param createdDate the created date of this links
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the modified date of this links.
	 *
	 * @return the modified date of this links
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this links.
	 *
	 * @param modifiedDate the modified date of this links
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the linkgroup ID of this links.
	 *
	 * @return the linkgroup ID of this links
	 */
	public long getLinkgroupId();

	/**
	 * Sets the linkgroup ID of this links.
	 *
	 * @param linkgroupId the linkgroup ID of this links
	 */
	public void setLinkgroupId(long linkgroupId);

	/**
	 * Returns the name of this links.
	 *
	 * @return the name of this links
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this links.
	 *
	 * @param name the name of this links
	 */
	public void setName(String name);

	/**
	 * Returns the description of this links.
	 *
	 * @return the description of this links
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this links.
	 *
	 * @param description the description of this links
	 */
	public void setDescription(String description);

	/**
	 * Returns the url of this links.
	 *
	 * @return the url of this links
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this links.
	 *
	 * @param url the url of this links
	 */
	public void setUrl(String url);

	/**
	 * Returns the position of this links.
	 *
	 * @return the position of this links
	 */
	public long getPosition();

	/**
	 * Sets the position of this links.
	 *
	 * @param position the position of this links
	 */
	public void setPosition(long position);

	/**
	 * Returns the has image of this links.
	 *
	 * @return the has image of this links
	 */
	public boolean getHasImage();

	/**
	 * Returns <code>true</code> if this links is has image.
	 *
	 * @return <code>true</code> if this links is has image; <code>false</code> otherwise
	 */
	public boolean isHasImage();

	/**
	 * Sets whether this links is has image.
	 *
	 * @param hasImage the has image of this links
	 */
	public void setHasImage(boolean hasImage);

	/**
	 * Returns the is target blank of this links.
	 *
	 * @return the is target blank of this links
	 */
	public boolean getIsTargetBlank();

	/**
	 * Returns <code>true</code> if this links is is target blank.
	 *
	 * @return <code>true</code> if this links is is target blank; <code>false</code> otherwise
	 */
	public boolean isIsTargetBlank();

	/**
	 * Sets whether this links is is target blank.
	 *
	 * @param isTargetBlank the is target blank of this links
	 */
	public void setIsTargetBlank(boolean isTargetBlank);

	/**
	 * Returns the image name of this links.
	 *
	 * @return the image name of this links
	 */
	@AutoEscape
	public String getImageName();

	/**
	 * Sets the image name of this links.
	 *
	 * @param imageName the image name of this links
	 */
	public void setImageName(String imageName);

	/**
	 * Returns the folder ID of this links.
	 *
	 * @return the folder ID of this links
	 */
	public long getFolderId();

	/**
	 * Sets the folder ID of this links.
	 *
	 * @param folderId the folder ID of this links
	 */
	public void setFolderId(long folderId);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Links links);

	public int hashCode();

	public CacheModel<Links> toCacheModel();

	public Links toEscapedModel();

	public String toString();

	public String toXmlString();
}