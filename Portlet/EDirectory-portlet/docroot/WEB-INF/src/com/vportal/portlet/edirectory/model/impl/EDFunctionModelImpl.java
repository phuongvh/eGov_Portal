/**
 * Copyright (c) Vietsoftware, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portlet.edirectory.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.vportal.portlet.edirectory.model.EDFunction;
import com.vportal.portlet.edirectory.model.EDFunctionModel;
import com.vportal.portlet.edirectory.model.EDFunctionSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the EDFunction service. Represents a row in the &quot;EDFunction&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vportal.portlet.edirectory.model.EDFunctionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EDFunctionImpl}.
 * </p>
 *
 * @author HOAN
 * @see EDFunctionImpl
 * @see com.vportal.portlet.edirectory.model.EDFunction
 * @see com.vportal.portlet.edirectory.model.EDFunctionModel
 * @generated
 */
@JSON(strict = true)
public class EDFunctionModelImpl extends BaseModelImpl<EDFunction>
	implements EDFunctionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e d function model instance should use the {@link com.vportal.portlet.edirectory.model.EDFunction} interface instead.
	 */
	public static final String TABLE_NAME = "EDFunction";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "levelEd", Types.INTEGER },
			{ "isShowTree", Types.BOOLEAN },
			{ "description", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "languageId", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table EDFunction (id_ LONG not null primary key,createdDate DATE null,name VARCHAR(500) null,levelEd INTEGER,isShowTree BOOLEAN,description VARCHAR(1000) null,groupId LONG,userId LONG,companyId LONG,languageId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table EDFunction";
	public static final String ORDER_BY_JPQL = " ORDER BY edFunction.levelEd ASC";
	public static final String ORDER_BY_SQL = " ORDER BY EDFunction.levelEd ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vportal.portlet.edirectory.model.EDFunction"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vportal.portlet.edirectory.model.EDFunction"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.vportal.portlet.edirectory.model.EDFunction"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long ID_COLUMN_BITMASK = 2L;
	public static long ISSHOWTREE_COLUMN_BITMASK = 4L;
	public static long LANGUAGEID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EDFunction toModel(EDFunctionSoap soapModel) {
		EDFunction model = new EDFunctionImpl();

		model.setId(soapModel.getId());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setName(soapModel.getName());
		model.setLevelEd(soapModel.getLevelEd());
		model.setIsShowTree(soapModel.getIsShowTree());
		model.setDescription(soapModel.getDescription());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setLanguageId(soapModel.getLanguageId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EDFunction> toModels(EDFunctionSoap[] soapModels) {
		List<EDFunction> models = new ArrayList<EDFunction>(soapModels.length);

		for (EDFunctionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vportal.portlet.edirectory.model.EDFunction"));

	public EDFunctionModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return EDFunction.class;
	}

	public String getModelClassName() {
		return EDFunction.class.getName();
	}

	@JSON
	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_columnBitmask |= ID_COLUMN_BITMASK;

		if (!_setOriginalId) {
			_setOriginalId = true;

			_originalId = _id;
		}

		_id = id;
	}

	public long getOriginalId() {
		return _originalId;
	}

	@JSON
	public Date getCreatedDate() {
		return _createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	@JSON
	public int getLevelEd() {
		return _levelEd;
	}

	public void setLevelEd(int levelEd) {
		_columnBitmask = -1L;

		_levelEd = levelEd;
	}

	@JSON
	public boolean getIsShowTree() {
		return _isShowTree;
	}

	public boolean isIsShowTree() {
		return _isShowTree;
	}

	public void setIsShowTree(boolean isShowTree) {
		_columnBitmask |= ISSHOWTREE_COLUMN_BITMASK;

		if (!_setOriginalIsShowTree) {
			_setOriginalIsShowTree = true;

			_originalIsShowTree = _isShowTree;
		}

		_isShowTree = isShowTree;
	}

	public boolean getOriginalIsShowTree() {
		return _originalIsShowTree;
	}

	@JSON
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	public String getLanguageId() {
		if (_languageId == null) {
			return StringPool.BLANK;
		}
		else {
			return _languageId;
		}
	}

	public void setLanguageId(String languageId) {
		_columnBitmask |= LANGUAGEID_COLUMN_BITMASK;

		if (_originalLanguageId == null) {
			_originalLanguageId = _languageId;
		}

		_languageId = languageId;
	}

	public String getOriginalLanguageId() {
		return GetterUtil.getString(_originalLanguageId);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public EDFunction toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (EDFunction)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					EDFunction.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		EDFunctionImpl edFunctionImpl = new EDFunctionImpl();

		edFunctionImpl.setId(getId());
		edFunctionImpl.setCreatedDate(getCreatedDate());
		edFunctionImpl.setName(getName());
		edFunctionImpl.setLevelEd(getLevelEd());
		edFunctionImpl.setIsShowTree(getIsShowTree());
		edFunctionImpl.setDescription(getDescription());
		edFunctionImpl.setGroupId(getGroupId());
		edFunctionImpl.setUserId(getUserId());
		edFunctionImpl.setCompanyId(getCompanyId());
		edFunctionImpl.setLanguageId(getLanguageId());

		edFunctionImpl.resetOriginalValues();

		return edFunctionImpl;
	}

	public int compareTo(EDFunction edFunction) {
		int value = 0;

		if (getLevelEd() < edFunction.getLevelEd()) {
			value = -1;
		}
		else if (getLevelEd() > edFunction.getLevelEd()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		EDFunction edFunction = null;

		try {
			edFunction = (EDFunction)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = edFunction.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EDFunctionModelImpl edFunctionModelImpl = this;

		edFunctionModelImpl._originalId = edFunctionModelImpl._id;

		edFunctionModelImpl._setOriginalId = false;

		edFunctionModelImpl._originalIsShowTree = edFunctionModelImpl._isShowTree;

		edFunctionModelImpl._setOriginalIsShowTree = false;

		edFunctionModelImpl._originalGroupId = edFunctionModelImpl._groupId;

		edFunctionModelImpl._setOriginalGroupId = false;

		edFunctionModelImpl._originalLanguageId = edFunctionModelImpl._languageId;

		edFunctionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EDFunction> toCacheModel() {
		EDFunctionCacheModel edFunctionCacheModel = new EDFunctionCacheModel();

		edFunctionCacheModel.id = getId();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			edFunctionCacheModel.createdDate = createdDate.getTime();
		}
		else {
			edFunctionCacheModel.createdDate = Long.MIN_VALUE;
		}

		edFunctionCacheModel.name = getName();

		String name = edFunctionCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			edFunctionCacheModel.name = null;
		}

		edFunctionCacheModel.levelEd = getLevelEd();

		edFunctionCacheModel.isShowTree = getIsShowTree();

		edFunctionCacheModel.description = getDescription();

		String description = edFunctionCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			edFunctionCacheModel.description = null;
		}

		edFunctionCacheModel.groupId = getGroupId();

		edFunctionCacheModel.userId = getUserId();

		edFunctionCacheModel.companyId = getCompanyId();

		edFunctionCacheModel.languageId = getLanguageId();

		String languageId = edFunctionCacheModel.languageId;

		if ((languageId != null) && (languageId.length() == 0)) {
			edFunctionCacheModel.languageId = null;
		}

		return edFunctionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", levelEd=");
		sb.append(getLevelEd());
		sb.append(", isShowTree=");
		sb.append(getIsShowTree());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", languageId=");
		sb.append(getLanguageId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.vportal.portlet.edirectory.model.EDFunction");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>levelEd</column-name><column-value><![CDATA[");
		sb.append(getLevelEd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isShowTree</column-name><column-value><![CDATA[");
		sb.append(getIsShowTree());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>languageId</column-name><column-value><![CDATA[");
		sb.append(getLanguageId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EDFunction.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			EDFunction.class
		};
	private long _id;
	private long _originalId;
	private boolean _setOriginalId;
	private Date _createdDate;
	private String _name;
	private int _levelEd;
	private boolean _isShowTree;
	private boolean _originalIsShowTree;
	private boolean _setOriginalIsShowTree;
	private String _description;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _companyId;
	private String _languageId;
	private String _originalLanguageId;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private EDFunction _escapedModelProxy;
}