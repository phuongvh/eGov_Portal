/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vportal.portlet.vsitemap.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the VsmBranch service. Represents a row in the &quot;VsmBranch&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.vportal.portlet.vsitemap.model.impl.VsmBranchModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.vportal.portlet.vsitemap.model.impl.VsmBranchImpl}.
 * </p>
 *
 * @author LongLH
 * @see VsmBranch
 * @see com.vportal.portlet.vsitemap.model.impl.VsmBranchImpl
 * @see com.vportal.portlet.vsitemap.model.impl.VsmBranchModelImpl
 * @generated
 */
public interface VsmBranchModel extends BaseModel<VsmBranch> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a vsm branch model instance should use the {@link VsmBranch} interface instead.
	 */

	/**
	 * Returns the primary key of this vsm branch.
	 *
	 * @return the primary key of this vsm branch
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this vsm branch.
	 *
	 * @param primaryKey the primary key of this vsm branch
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the branch ID of this vsm branch.
	 *
	 * @return the branch ID of this vsm branch
	 */
	public long getBranchId();

	/**
	 * Sets the branch ID of this vsm branch.
	 *
	 * @param branchId the branch ID of this vsm branch
	 */
	public void setBranchId(long branchId);

	/**
	 * Returns the group ID of this vsm branch.
	 *
	 * @return the group ID of this vsm branch
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this vsm branch.
	 *
	 * @param groupId the group ID of this vsm branch
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this vsm branch.
	 *
	 * @return the company ID of this vsm branch
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this vsm branch.
	 *
	 * @param companyId the company ID of this vsm branch
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the created date of this vsm branch.
	 *
	 * @return the created date of this vsm branch
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this vsm branch.
	 *
	 * @param createdDate the created date of this vsm branch
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the created by user of this vsm branch.
	 *
	 * @return the created by user of this vsm branch
	 */
	public long getCreatedByUser();

	/**
	 * Sets the created by user of this vsm branch.
	 *
	 * @param createdByUser the created by user of this vsm branch
	 */
	public void setCreatedByUser(long createdByUser);

	/**
	 * Returns the modified date of this vsm branch.
	 *
	 * @return the modified date of this vsm branch
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this vsm branch.
	 *
	 * @param modifiedDate the modified date of this vsm branch
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the modified by user of this vsm branch.
	 *
	 * @return the modified by user of this vsm branch
	 */
	public long getModifiedByUser();

	/**
	 * Sets the modified by user of this vsm branch.
	 *
	 * @param modifiedByUser the modified by user of this vsm branch
	 */
	public void setModifiedByUser(long modifiedByUser);

	/**
	 * Returns the parent ID of this vsm branch.
	 *
	 * @return the parent ID of this vsm branch
	 */
	public long getParentId();

	/**
	 * Sets the parent ID of this vsm branch.
	 *
	 * @param parentId the parent ID of this vsm branch
	 */
	public void setParentId(long parentId);

	/**
	 * Returns the name of this vsm branch.
	 *
	 * @return the name of this vsm branch
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this vsm branch.
	 *
	 * @param name the name of this vsm branch
	 */
	public void setName(String name);

	/**
	 * Returns the description of this vsm branch.
	 *
	 * @return the description of this vsm branch
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this vsm branch.
	 *
	 * @param description the description of this vsm branch
	 */
	public void setDescription(String description);

	/**
	 * Returns the anchored of this vsm branch.
	 *
	 * @return the anchored of this vsm branch
	 */
	public boolean getAnchored();

	/**
	 * Returns <code>true</code> if this vsm branch is anchored.
	 *
	 * @return <code>true</code> if this vsm branch is anchored; <code>false</code> otherwise
	 */
	public boolean isAnchored();

	/**
	 * Sets whether this vsm branch is anchored.
	 *
	 * @param anchored the anchored of this vsm branch
	 */
	public void setAnchored(boolean anchored);

	/**
	 * Returns the href of this vsm branch.
	 *
	 * @return the href of this vsm branch
	 */
	@AutoEscape
	public String getHref();

	/**
	 * Sets the href of this vsm branch.
	 *
	 * @param href the href of this vsm branch
	 */
	public void setHref(String href);

	/**
	 * Returns the language of this vsm branch.
	 *
	 * @return the language of this vsm branch
	 */
	@AutoEscape
	public String getLanguage();

	/**
	 * Sets the language of this vsm branch.
	 *
	 * @param language the language of this vsm branch
	 */
	public void setLanguage(String language);

	/**
	 * Returns the has icon of this vsm branch.
	 *
	 * @return the has icon of this vsm branch
	 */
	public boolean getHasIcon();

	/**
	 * Returns <code>true</code> if this vsm branch is has icon.
	 *
	 * @return <code>true</code> if this vsm branch is has icon; <code>false</code> otherwise
	 */
	public boolean isHasIcon();

	/**
	 * Sets whether this vsm branch is has icon.
	 *
	 * @param hasIcon the has icon of this vsm branch
	 */
	public void setHasIcon(boolean hasIcon);

	/**
	 * Returns the icon of this vsm branch.
	 *
	 * @return the icon of this vsm branch
	 */
	@AutoEscape
	public String getIcon();

	/**
	 * Sets the icon of this vsm branch.
	 *
	 * @param icon the icon of this vsm branch
	 */
	public void setIcon(String icon);

	/**
	 * Returns the position of this vsm branch.
	 *
	 * @return the position of this vsm branch
	 */
	public long getPosition();

	/**
	 * Sets the position of this vsm branch.
	 *
	 * @param position the position of this vsm branch
	 */
	public void setPosition(long position);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(VsmBranch vsmBranch);

	public int hashCode();

	public CacheModel<VsmBranch> toCacheModel();

	public VsmBranch toEscapedModel();

	public String toString();

	public String toXmlString();
}